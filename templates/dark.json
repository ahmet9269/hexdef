{
  "name": "Dark Project",
  "description": "Dark tema proje yapısı",
 "structure": [
    {
      "type": "directory",
      "path": "adapters"
    },
    {
      "type": "directory",
      "path": "adapters/incoming"
    },
    {
      "type": "directory",
      "path": "adapters/incoming/${DB}"
    },
    {
      "type": "directory",
      "path": "adapters/incoming/deneme"
    },
    {
      "type": "directory",
      "path": "adapters/outgoing"
    },
    {
      "type": "directory",
      "path": "adapters/common"
    },
    {
      "type": "directory",
      "path": "adapters/common/utils"
    },
    {
      "type": "directory",
      "path": "domain"
    },
    {
      "type": "directory",
      "path": "domain/logic"
    },
    {
      "type": "directory",
      "path": "domain/model"
    },
    {
      "type": "directory",
      "path": "domain/ports"
    },
    {
      "type": "directory",
      "path": "domain/ports/incoming"
    },
    {
      "type": "directory",
      "path": "domain/ports/outgoing"
    },
    {
      "type": "file",
      "path": "main.cpp",
      "content": "#include <iostream>\n\nint main() {\n    std::cout << \"White Project - Hexagonal Architecture\" << std::endl;\n    return 0;\n}\n"
    },
    {
      "type": "file",
      "path": "CMakeLists.txt",
      "content": "cmake_minimum_required(VERSION 3.10)\nproject(WhiteProject)\n\nset(CMAKE_CXX_STANDARD 17)\n\nadd_executable(${PROJECT_NAME} main.cpp)\n"
    },
    {
      "type": "file",
      "path": "README.md",
      "content": "# White Project\n\nHexagonal Architecture template project.\n\n## Structure\n\n- **adapters/**: External interface adapters\n  - **incoming/**: Input adapters (REST, CLI, etc.)\n  - **outgoing/**: Output adapters (Database, APIs, etc.)\n  - **common/**: Shared utilities\n- **domain/**: Business logic layer\n  - **logic/**: Business rules\n  - **model/**: Domain models\n  - **ports/**: Interface definitions\n\n## Build\n\n```bash\nmkdir build && cd build\ncmake ..\nmake\n```\n"
    }
  ]
}
